# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import json

import grpc
from google.protobuf.json_format import MessageToJson

import grpc_py.query_process_pb2 as query__process__pb2

import logging
logging.basicConfig(format="%(asctime)s-%(name)s-%(levelname)s-%(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)


class QueryProcessGrpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Process = channel.unary_unary(
                '/queryprocess.QueryProcessGrpc/Process',
                request_serializer=query__process__pb2.QpRequest.SerializeToString,
                response_deserializer=query__process__pb2.QpResponse.FromString,
                )


class QueryProcessGrpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Process(self, request, context):
        """Missing associated documentation comment in .proto file."""
        logger.info("Request: {}".format(request))
        req_dict = json.loads(MessageToJson(request))
        raw_dsl = "{} from gRPC server!".format(req_dict.get("query", "NO Query"))
        data = query__process__pb2.Data(raw_dsl=raw_dsl)
        logger.info("Request success!")
        return query__process__pb2.QpResponse(code=200, data=data, msg="success")


def add_QueryProcessGrpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Process': grpc.unary_unary_rpc_method_handler(
                    servicer.Process,
                    request_deserializer=query__process__pb2.QpRequest.FromString,
                    response_serializer=query__process__pb2.QpResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'queryprocess.QueryProcessGrpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryProcessGrpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Process(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/queryprocess.QueryProcessGrpc/Process',
            query__process__pb2.QpRequest.SerializeToString,
            query__process__pb2.QpResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
